<?xml version='1.0' encoding='UTF-8'?> 
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
                "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="cairo-cairo-matrix-t">
<refmeta>
<refentrytitle id="top_of_page">cairo_matrix_t</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>CAIRO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>cairo_matrix_t</refname>
<refpurpose>Generic matrix operations</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="synopsis">
<title id="synopsis.title">Synopsis</title>

<synopsis>



            <link linkend="cairo-matrix-t">cairo_matrix_t</link>;
</synopsis>
</refsynopsisdiv>









<refsect1 id="desc">
<title id="desc.title">Description</title>

  <para><indexterm><primary>types</primary><secondary>cairo_matrix</secondary></indexterm><indexterm><primary/></indexterm>
    <link linkend="cairo-matrix-t"><type>cairo_matrix_t</type></link> is used throughout cairo to convert between different
    coordinate spaces.  A <link linkend="cairo-matrix-t"><type>cairo_matrix_t</type></link> holds an affine transformation,
    such as a scale, rotation, shear, or a combination of these.
    The transformation of a point (<literal>x</literal>,<literal>y</literal>)
    is given by:
  </para>
  <programlisting>
    x_new = xx * x + xy * y + x0;
    y_new = yx * x + yy * y + y0;
  </programlisting>
  <para>
    The current transformation matrix of a <link linkend="cairo-t"><type>cairo_t</type></link>, represented as a
    <link linkend="cairo-matrix-t"><type>cairo_matrix_t</type></link>, defines the transformation from user-space
    coordinates to device-space coordinates. See <link linkend="cairo-get-matrix"><function>cairo_get_matrix()</function></link> and
    <link linkend="cairo-set-matrix"><function>cairo_set_matrix()</function></link>.
  </para>
</refsect1>

<refsect1 id="details">
<title id="details.title">Details</title>
<refsect2>
<title><anchor id="cairo-matrix-t" role="struct"/>cairo_matrix_t</title>
<indexterm><primary>cairo_matrix_t</primary></indexterm><programlisting>typedef struct {
    double xx; double yx;
    double xy; double yy;
    double x0; double y0;
} cairo_matrix_t;
</programlisting>
<para>
A <link linkend="cairo-matrix-t"><type>cairo_matrix_t</type></link> holds an affine transformation, such as a scale,
rotation, shear, or a combination of those. The transformation of
a point (x, y) is given by:
<programlisting>
    x_new = xx * x + xy * y + x0;
    y_new = yx * x + yy * y + y0;
</programlisting></para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><link linkend="double">double</link>&nbsp;<structfield>xx</structfield>;</term>
<listitem><simpara> xx component of the affine transformation
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="double">double</link>&nbsp;<structfield>yx</structfield>;</term>
<listitem><simpara> yx component of the affine transformation
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="double">double</link>&nbsp;<structfield>xy</structfield>;</term>
<listitem><simpara> xy component of the affine transformation
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="double">double</link>&nbsp;<structfield>yy</structfield>;</term>
<listitem><simpara> yy component of the affine transformation
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="double">double</link>&nbsp;<structfield>x0</structfield>;</term>
<listitem><simpara> X translation component of the affine transformation
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="double">double</link>&nbsp;<structfield>y0</structfield>;</term>
<listitem><simpara> Y translation component of the affine transformation
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
