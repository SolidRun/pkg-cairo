<?xml version='1.0' encoding='UTF-8'?> 
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
                "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="cairo-Version-Information">
<refmeta>
<refentrytitle>
  Version Information</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>CAIRO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>
  Version Information</refname><refpurpose>
  Compile and run time version checks</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



#define     <link linkend="CAIRO-VERSION:CAPS">CAIRO_VERSION</link>
#define     <link linkend="CAIRO-VERSION-ENCODE:CAPS">CAIRO_VERSION_ENCODE</link>            (major, minor, micro)
<link linkend="int">int</link>         <link linkend="cairo-version">cairo_version</link>                   (void);
const <link linkend="char">char</link>* <link linkend="cairo-version-string">cairo_version_string</link>            (void);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="CAIRO-VERSION:CAPS"/>CAIRO_VERSION</title>
<indexterm><primary>CAIRO_VERSION</primary></indexterm><programlisting>#define     CAIRO_VERSION</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="CAIRO-VERSION-ENCODE:CAPS"/>CAIRO_VERSION_ENCODE()</title>
<indexterm><primary>CAIRO_VERSION_ENCODE</primary></indexterm><programlisting>#define     CAIRO_VERSION_ENCODE(major, minor, micro)</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>major</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>minor</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>micro</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="cairo-version"/>cairo_version ()</title>
<indexterm><primary>cairo_version</primary></indexterm><programlisting><link linkend="int">int</link>         cairo_version                   (void);</programlisting>
<para>
Returns the version of the cairo library encoded in a single
integer as per CAIRO_VERSION_ENCODE. The encoding ensures that
later versions compare greater than earlier versions.
</para>
<para>
A run-time comparison to check that cairo's version is greater than
or equal to version X.Y.Z could be performed as follows:
</para>
<para>
<informalexample><programlisting>
if (<link linkend="cairo-version"><function>cairo_version()</function></link> &gt;= CAIRO_VERSION_ENCODE(X,Y,Z)) {...}
</programlisting></informalexample>
</para>
<para>
See also <link linkend="cairo-version-string"><function>cairo_version_string()</function></link> as well as the compile-time
equivalents <literal>CAIRO_VERSION</literal> and <literal>CAIRO_VERSION_STRING</literal>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the encoded version.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="cairo-version-string"/>cairo_version_string ()</title>
<indexterm><primary>cairo_version_string</primary></indexterm><programlisting>const <link linkend="char">char</link>* cairo_version_string            (void);</programlisting>
<para>
Returns the version of the cairo library as a human-readable string
of the form "X.Y.Z".
</para>
<para>
See also <link linkend="cairo-version"><function>cairo_version()</function></link> as well as the compile-time equivalents
<literal>CAIRO_VERSION_STRING</literal> and <literal>CAIRO_VERSION</literal>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a string containing the version.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
