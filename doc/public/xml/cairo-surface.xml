<?xml version='1.0' encoding='UTF-8'?> 
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
                "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="cairo-cairo-surface-t">
<refmeta>
<refentrytitle id="top_of_page">cairo_surface_t</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>CAIRO Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>cairo_surface_t</refname>
<refpurpose>Base class for surfaces</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="synopsis">
<title id="synopsis.title">Synopsis</title>

<synopsis>



typedef     <link linkend="cairo-surface-t">cairo_surface_t</link>;
enum        <link linkend="cairo-content-t">cairo_content_t</link>;
</synopsis>
</refsynopsisdiv>









<refsect1 id="desc">
<title id="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 id="details">
<title id="details.title">Details</title>
<refsect2>
<title><anchor id="cairo-surface-t" role="typedef"/>cairo_surface_t</title>
<indexterm><primary>cairo_surface_t</primary></indexterm><programlisting>typedef struct _cairo_surface cairo_surface_t;
</programlisting>
<para>
A <link linkend="cairo-surface-t"><type>cairo_surface_t</type></link> represents an image, either as the destination
of a drawing operation or as source when drawing onto another
surface. There are different subtypes of cairo_surface_t for
different drawing backends; for example, <link linkend="cairo-image-surface-create"><function>cairo_image_surface_create()</function></link>
creates a bitmap image in memory.
</para>
<para>
Memory management of <link linkend="cairo-surface-t"><type>cairo_surface_t</type></link> is done with
<link linkend="cairo-surface-reference"><function>cairo_surface_reference()</function></link> and <link linkend="cairo-surface-destroy"><function>cairo_surface_destroy()</function></link>.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="cairo-content-t" role="enum"/>enum cairo_content_t</title>
<indexterm><primary>cairo_content_t</primary></indexterm><programlisting>typedef enum _cairo_content {
    CAIRO_CONTENT_COLOR		= 0x1000,
    CAIRO_CONTENT_ALPHA		= 0x2000,
    CAIRO_CONTENT_COLOR_ALPHA	= 0x3000
} cairo_content_t;
</programlisting>
<para>
<parameter>cairo_content_t</parameter> is used to describe the content that a surface will
contain, whether color information, alpha information (translucence
vs. opacity), or both.
</para>
<para>
Note: The large values here are designed to keep cairo_content_t
values distinct from cairo_format_t values so that the
implementation can detect the error if users confuse the two types.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><anchor id="CAIRO-CONTENT-COLOR:CAPS" role="constant"/><literal>CAIRO_CONTENT_COLOR</literal></term>
<listitem><simpara> The surface will hold color content only.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="CAIRO-CONTENT-ALPHA:CAPS" role="constant"/><literal>CAIRO_CONTENT_ALPHA</literal></term>
<listitem><simpara> The surface will hold alpha content only.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><anchor id="CAIRO-CONTENT-COLOR-ALPHA:CAPS" role="constant"/><literal>CAIRO_CONTENT_COLOR_ALPHA</literal></term>
<listitem><simpara> The surface will hold color and alpha content.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
